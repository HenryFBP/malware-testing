import shutil
import os
import sys
from cryptography.fernet import Fernet
'''
This program will copy "sampledata" to the desktop, recursively encrypt all files in the "sampledata" directory, and delete the original "sampledata" directory.
'''

THIS_DIR = os.path.dirname(os.path.abspath(__file__))

SAMPLE_DATA_DESKTOP_PATH = os.path.expanduser("~/Desktop/sampledata")

ENCRYPTION_KEY_RAW = b"acS7-XGrwdwu7Kfx1swNCsT6XMYvcv5BKAonky8MkEo="
FERNET = Fernet(ENCRYPTION_KEY_RAW)


def encrypt_file(file_path: str) -> None:
    data_encrypted = None

    # read file contents, encrypt data in memory
    with open(file_path, 'rb') as f:
        data: bytes = f.read()

        data_encrypted = FERNET.encrypt(data)

    # write encrypted data to file
    with open(file_path, 'wb') as f:
        f.write(data_encrypted)

    # rename file
    file_path_enc: str = file_path + ".enc"
    shutil.move(file_path, file_path_enc)

    print("MV " + file_path + " " + file_path_enc)


def copy_sampledata_to_desktop():
    shutil.copytree(os.path.abspath(THIS_DIR+"/sampledata"), SAMPLE_DATA_DESKTOP_PATH)


def delete_sampledata_from_desktop():
    shutil.rmtree(SAMPLE_DATA_DESKTOP_PATH)


def encrypt_folder_recursively(folder_path) -> None:
    i = 0
    # walk tree recursively
    for root, dirs, files in os.walk(folder_path):
        i += 1

        for file in files:
            file_path = os.path.join(root, file)

            if file_path.endswith(".enc"):
                # don't encrypt, it's already encrypted
                print("SKIP " + file_path)
                continue

            print("ENCRYPT " + file_path)
            encrypt_file(file_path)


if __name__ == "__main__":

    if os.path.exists(SAMPLE_DATA_DESKTOP_PATH):
        delete_sampledata_from_desktop()

    if not os.path.exists(SAMPLE_DATA_DESKTOP_PATH):
        copy_sampledata_to_desktop()

    encrypt_folder_recursively(SAMPLE_DATA_DESKTOP_PATH)
